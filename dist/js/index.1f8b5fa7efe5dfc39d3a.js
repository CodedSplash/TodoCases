!function(){"use strict";var e={945:function(e,n,t){t.r(n);var o=t(91),i=t.n(o),s=new URL(t(830),t.b),r='<!doctype html> <html lang="ru"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width,user-scalable=no,initial-scale=1,maximum-scale=1,minimum-scale=1"> <meta http-equiv="X-UA-Compatible" content="ie=edge"> <link rel="icon" href="'+i()(s)+'" type="image/svg+xml"> <title>Todo cases</title> </head> <body> <header class="header"> <div class="header__container"> <button class="header__button header__button-menu button" aria-label="Меню проектов" type="button"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"> <style>svg{fill:#000000}</style> <path d="M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z"/> </svg></button> <button class="header__button header__button-settings button" aria-label="Настройки" type="button"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"> <style>svg{fill:#000000}</style> <path d="M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z"/> </svg></button> </div> </header> <main class="main"> <project-side-menu></project-side-menu> <todo-content project-id="0"></todo-content> </main> </body> </html> ';n.default=r},91:function(e){e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),n.hash&&(e+=n.hash),n.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},490:function(e,n,t){t.r(n)},784:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("settings")).theme,o=`\n           <style>\n                .container {\n                    position: relative;\n                }\n            \n                .context-menu-button {\n                    border: none;\n                    background-color: transparent;\n                    padding: 10px 15px;\n                    cursor: pointer;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    border-radius: 6px;\n                }\n                \n                .context-menu-button svg {\n                    fill: ${"black"===t?"#fff":"#000"};\n                }\n                \n                .context-menu-button:hover {\n                    background-color: ${"black"===t?"rgba(255,255,255,0.15)":"rgba(0,0,0,0.15)"};\n                }\n                \n                .context-menu {\n                    display: none;\n                    position: absolute;\n                    left: -100%;\n                    background-color: ${"black"===t?"#202020":"#fff"};\n                    -webkit-box-shadow: 0 0 10px 0 rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 0 10px 0 rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 0 10px 0 rgba(34, 60, 80, 0.2);\n                    padding: 6px 8px;\n                    border-radius: 5px;\n                    border: 1px solid rgba(255, 255, 255, 0.1);\n                    z-index: 10;\n                }\n                \n                @media (max-width: 1320px)\n                {\n                    .context-menu {\n                        left: -415%;\n                    }\n                }\n                \n                .context-menu.open {\n                    display: block;\n                }\n                \n                .context-menu__item {\n                    width: 100%;\n                    text-align: left;\n                    padding: 9px 5px;\n                    background-color: transparent;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    font-weight: 700;\n                    color: ${"black"===t?"#fff":"#000"};\n                }\n                \n                .context-menu__item:hover {\n                    background-color: ${"black"===t?"rgba(255,255,255,0.2)":"rgba(47,79,79,0.25)"};\n                }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${o}\n            <div class="container">\n                <button class="context-menu-button">\n                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 128 512"><style>svg{fill:#000000}</style><path d="M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z"/></svg>\n                </button>\n                <div class="context-menu">\n                    <div class="context-menu__body">\n                        <button class="context-menu__item" id="modify">Изменить</button>\n                        <changing-priority project-id="${e}" task-id="${n}"></changing-priority>\n                        <button class="context-menu__item" id="duplicate">Дублировать</button>\n                        <button class="context-menu__item" id="delete">Удалить</button>\n                    </div>\n                </div>\n            </div>\n        `}openContextMenu(){const e=this.shadow.querySelector(".context-menu"),n=Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight);e.classList.toggle("open"),Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)>n?(e.style.top="-150.33px",e.style.bottom=""):(e.style.top="",e.style.bottom="-150.33px")}modify(){const e=this.getAttribute("project-id"),n=this.getAttribute("task-id"),t=document.createElement("modify-task");t.setAttribute("project-id",e),t.setAttribute("task-id",n),document.body.append(t),this.openContextMenu()}duplicate(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("projects")),o=t.find((n=>n.id===e)),i=t.indexOf(o),s=o.tasks,r=s.find((e=>e.id===n)),d=s.indexOf(r),a=document.querySelector("todo-content"),c={title:r.title,id:(new Date).getTime(),description:r.description,accomplished:r.accomplished,priority:r.priority};s.splice(d+1,0,c),o.tasks=s,t.splice(i,1,o),localStorage.setItem("projects",JSON.stringify(t)),a.taskRendering(),this.openContextMenu()}delete(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("projects")),o=t.find((n=>n.id===e)),i=t.indexOf(o),s=o.tasks,r=s.find((e=>e.id===n)),d=s.indexOf(r),a=document.querySelector("todo-content");s.splice(d,1),t.splice(i,1,o),localStorage.setItem("projects",JSON.stringify(t)),a.taskRendering(),this.openContextMenu()}connectedCallback(){this.render(),this.shadow.querySelector(".context-menu-button").addEventListener("click",this.openContextMenu.bind(this)),this.shadow.querySelector("#modify").addEventListener("click",this.modify.bind(this)),this.shadow.querySelector("#duplicate").addEventListener("click",this.duplicate.bind(this)),this.shadow.querySelector("#delete").addEventListener("click",this.delete.bind(this))}disconnectedCallback(){this.shadow.querySelector(".context-menu-button").removeEventListener("click",this.openContextMenu.bind(this)),this.shadow.querySelector("#modify").removeEventListener("click",this.modify.bind(this)),this.shadow.querySelector("#duplicate").removeEventListener("click",this.duplicate.bind(this)),this.shadow.querySelector("#delete").addEventListener("click",this.delete.bind(this))}}customElements.define("actions-task",t)},52:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")).theme,n=`\n    \n    <style>\n      .popup {\n        background-color: rgba(0, 0, 0, .5);\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        overflow: hidden;\n      }\n      .popup__body {\n        background-color: ${"black"===e?"#282828":"#fff"};\n        border-radius: 10px;\n        display: flex;\n        flex-direction: column;\n        row-gap: 14px;\n        min-width: 500px;\n        max-height: 600px;\n        overflow-y: auto;\n        overflow-x: hidden;\n        -webkit-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n        -moz-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n        box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n        padding: 15px 0;\n      }\n      \n      .popup__content {\n        display: flex;\n        flex-direction: column;\n        row-gap: 20px;\n        padding: 0 20px;\n      }\n      \n      .popup__input {\n        display: flex;\n        flex-direction: column;\n        row-gap: 10px;\n      }\n      \n      .popup__input label {\n        font-weight: 700;\n        color: ${"black"===e?"#fff":"#000"};\n      }\n      \n      .popup__input input {\n        font-size: 18px;\n        border-radius: 4px;\n        outline: none;\n      }\n      \n      .popup__input input[type=text]:focus {\n        border: 2px solid rgba(0, 0, 0, 0.5);\n        outline: none;\n      }\n      \n      .popup__input input[type=color] {\n        background-color: ${"black"===e?"#282828":"#fff"};\n        border: 1px solid ${"black"===e?"#fff":"#000"};\n      }\n      \n      #name {\n        padding: 5px;\n        color: ${"black"===e?"#fff":"#000"};\n        border: 1px solid ${"black"===e?"#fff":"#000"};\n        background-color: ${"black"===e?"#282828":"#fff"};\n      }\n      \n      #color {\n        cursor: pointer;\n      }\n      \n      .popup__buttons {\n        display: flex;\n        justify-content: end;\n        align-items: center;\n        column-gap: 10px;\n        padding: 0 20px;\n      }\n      \n      hr {\n        width: 100%;\n        padding: 0;\n        margin: 0;\n        border-color: rgba(211, 211, 211, 0.4);\n      }\n      \n      .popup__title {\n        margin: 0;\n        padding: 0 20px;\n        color: ${"black"===e?"#fff":"#000"};\n      }\n      \n      .popup__cancel {\n        background-color: #2F4F4FFF;\n        border-radius: 4px;\n        border: none;\n        padding: 10px;\n        color: #fff;\n        font-weight: 700;\n        cursor: pointer;\n        -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n      }\n      \n      .popup__add-btn {\n        background-color: ${"blue"===e?"#2967e2":"#ff004d"};\n        border-radius: 4px;\n        border: none;\n        padding: 10px;\n        color: #fff;\n        font-weight: 700;\n        cursor: pointer;\n        -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n      }\n      .popup__add-btn:disabled {\n        background-color: ${"blue"===e?"rgba(41,103,226,0.7)":"rgba(255,0,77,0.7)"};\n        cursor: default;\n      }\n      \n      @media (max-width: 520px) {\n        .popup__body {\n            min-width: 290px;\n            max-width: 290px;\n        }\n        \n        .popup__input input {\n          font-size: 12px;\n        }\n      }\n    </style>\n    \n    <div class="popup"">\n      <div class="popup__body">\n        <h2 class="popup__title">Добавить проект</h2>\n        <hr>\n        <div class="popup__content">\n          <div class="popup__input">\n              <label for="name">Имя</label>\n              <input type="text" name="name" id="name" />\n          </div>\n          <div class="popup__input">\n            <label for="color">Цвет</label>\n            <input type="color" value="#808080" name="color" id="color" />\n          </div>\n        </div>\n        <hr>\n        <div class="popup__buttons">\n            <button class="popup__cancel">Отмена</button>\n            <button class="popup__add-btn" disabled>Добавить</button>\n        </div>\n      </div>\n    </div>\n    `;this.shadow.innerHTML=n}closePopup(){document.querySelector("add-project-popup").remove()}addProject(){const e=this.shadow.querySelector("#name"),n=this.shadow.querySelector("#color"),t=document.querySelector("project-side-menu"),o={id:(new Date).getTime(),title:e.value,color:n.value,tasks:[]},i=JSON.parse(localStorage.getItem("projects"))||[];i.push(o),localStorage.setItem("projects",JSON.stringify(i)),t.projectRenderer(),this.closePopup()}connectedCallback(){this.render(),this.shadow.querySelector(".popup__cancel").addEventListener("click",this.closePopup),this.shadow.querySelector(".popup__add-btn").addEventListener("click",this.addProject.bind(this)),this.shadow.querySelector("#name").addEventListener("input",(e=>{const n=this.shadow.querySelector(".popup__add-btn"),t=e.target;n.disabled=!t.value}))}disconnectedCallback(){this.shadow.querySelector(".popup__cancel").removeEventListener("click",this.closePopup),this.shadow.querySelector(".popup__add-btn").addEventListener("click",this.addProject.bind(this)),this.shadow.querySelector("#name").removeEventListener("input",(e=>{const n=this.shadow.querySelector(".popup__add-btn"),t=e.target;n.disabled=!t.value}))}}customElements.define("add-project-popup",t)},679:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")),n=(null==e?void 0:e.theme)||"white",t=`\n      <style>\n        button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border: none;\n            background-color: transparent;\n            cursor: pointer;\n            padding: 8px;\n            border-radius: 6px;\n        }\n        \n        button svg {\n            fill: ${"black"===n?"#fff":"#000"};\n        }\n        \n        button:hover {\n            background-color: ${"black"===n?"rgba(0,0,0,0.4)":"rgba(255,255,255,0.4)"};\n        }\n      </style>\n    `;this.shadow.innerHTML=`\n${t}\n<button>\n  <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><style>svg{fill:#000000}</style><path d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z"/></svg>\n</button>\n`}connectedCallback(){this.render(),this.addEventListener("click",(()=>{const e=document.createElement("add-project-popup");document.body.append(e)}))}disconnectedCallback(){this.removeEventListener("click",(()=>{const e=document.createElement("add-project-popup");document.body.append(e)}))}}customElements.define("add-project",t)},682:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")).theme,n=`\n            <style>\n                .add-task-button {\n                    display: flex;\n                    column-gap: 10px;\n                    border: none;\n                    background-color: transparent;\n                    cursor: pointer;\n                    padding: 10px;\n                }\n                \n                .add-task-button span{\n                    display: flex;\n                    align-items: center;\n                    color: ${"black"===e?"#fff":"#000"};\n                }\n                \n                .plus svg {\n                    fill: ${"black"===e?"#fff":"#000"};\n                    z-index: 10;\n                }\n                \n                .add-task-button:hover .plus svg {\n                    fill: #fff;\n                    z-index: 10;\n                }\n                \n                .add-task-button:hover .plus {\n                    position: relative;\n                }\n                \n                .add-task-button:hover .plus:before {\n                    content: '';\n                    top: calc(16px - 18px);\n                    left: calc(15px - 18px);\n                    position: absolute;\n                    width: 18px;\n                    height: 18px;\n                    background-color: #ff0000;\n                    border-radius: 50%;\n                }\n                \n                .add-task-button:hover .text {\n                    color: #ff0000;\n                }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${n}\n            <button class="add-task-button">\n                <span class="plus">\n                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><style>svg{fill:#000000}</style><path d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z"/></svg>\n                </span>\n                <span class="text">Добавить задачу</span>\n            </button>\n        `}connectedCallback(){this.render();const e=this.shadow.querySelector(".add-task-button"),n=document.querySelector("todo-content");e.addEventListener("click",n.renderAddTaskForm.bind(n))}}customElements.define("add-task-button",t)},337:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")).theme,n=`\n            <style>\n                .add-task-form {\n                    border: 1px solid #c0c0c0;\n                    border-radius: 10px;\n                }\n                \n                .add-task-form__content {\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 8px;\n                    padding: 8px 8px 0 8px;\n                }\n                \n                .add-task-form__content select {\n                    align-self: start;\n                }\n                \n                .add-task-form__content input {\n                    border: none;\n                    background-color: ${"black"===e?"#202020":"#fff"};\n                    color: ${"black"===e?"#fff":"#000"};\n                }\n                \n                .add-task-form__content input:focus {\n                    outline: none;\n                }\n                \n                #name {\n                    font-size: 14px;\n                    font-weight: 700;\n                }\n                \n                #description {\n                    font-size: 12px;\n                }\n                \n                .add-task-form__buttons {\n                    display: flex;\n                    align-items: center;\n                    justify-content: end;\n                    column-gap: 10px;\n                    padding: 0 8px 8px 8px;\n                }\n                \n                .add-task-form__cancel {\n                    background-color: #2F4F4FFF;\n                    border-radius: 4px;\n                    border: none;\n                    padding: 10px;\n                    color: #fff;\n                    font-weight: 700;\n                    cursor: pointer;\n                    -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                }\n                \n                .add-task-form__add {\n                    background-color: ${"blue"===e?"#2967e2":"#ff004d"};\n                    border-radius: 4px;\n                    border: none;\n                    padding: 10px;\n                    color: #fff;\n                    font-weight: 700;\n                    cursor: pointer;\n                    -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                }\n                \n                .add-task-form__add:disabled {\n                    background-color: ${"blue"===e?"rgba(41,103,226,0.7)":"rgba(255,0,77,0.7)"};\n                    cursor: default;\n                  }\n                \n                hr {\n                    border: 1px solid #c0c0c0;\n                }\n                \n                .name-task-error::placeholder {\n                    color: #FF0000FF;\n                }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${n}\n            <div class="add-task-form">\n                <div class="add-task-form__conteiner">\n                    <div class="add-task-form__content">\n                        <input type="text" id="name" placeholder="Название задачи">\n                        <input type="text" id="description" placeholder="Описание">\n                        <select name="priority" id="priority">\n                            <option value="Приоритет 1">Приоритет 1</option>\n                            <option value="Приоритет 2">Приоритет 2</option>\n                            <option value="Приоритет 3">Приоритет 3</option>\n                            <option value="Приоритет 4" selected>Приоритет 4</option>\n                        </select>\n                    </div>\n                    <hr>\n                    <div class="add-task-form__buttons">\n                        <button class="add-task-form__cancel">Отмена</button>\n                        <button class="add-task-form__add" disabled>Добавить задачу</button>\n                    </div>\n                </div>\n            </div>\n        `}add(){const e=parseInt(this.getAttribute("project-id")),n=this.shadow.querySelector("#name"),t=this.shadow.querySelector("#description"),o=this.shadow.querySelector("#priority"),i=this.shadow.querySelector(".add-task-form__add"),s=JSON.parse(localStorage.getItem("projects"));if(n.value.length){let r;r="Приоритет 1"===o.value||"Приоритет 2"===o.value||"Приоритет 3"===o.value||"Приоритет 4"===o.value?o.value:"Приоритет 4";const d={title:n.value,description:t.value,id:(new Date).getTime(),accomplished:!1,priority:r},a=s.map((n=>(n.id===e&&n.tasks.push(d),n)));localStorage.setItem("projects",JSON.stringify(a)),n.value="",t.value="",o.value="Приоритет 4",n.classList.contains("name-task-error")&&n.classList.remove("name-task-error"),i.disabled=!0,document.querySelector("todo-content").taskRendering()}else n.classList.add("name-task-error"),n.focus()}cancel(){document.querySelector("todo-content").renderAddTaskButton()}connectedCallback(){this.render();const e=this.shadow.querySelector(".add-task-form__cancel"),n=this.shadow.querySelector(".add-task-form__add");e.addEventListener("click",this.cancel),n.addEventListener("click",this.add.bind(this)),this.shadow.querySelector("#name").addEventListener("input",(e=>{const n=this.shadow.querySelector(".add-task-form__add"),t=e.target;n.disabled=!t.value}))}disconnectedCallback(){const e=this.shadow.querySelector(".add-task-form__cancel"),n=this.shadow.querySelector(".add-task-form__add");e.addEventListener("click",this.cancel),n.addEventListener("click",this.add.bind(this)),this.shadow.querySelector("#name").addEventListener("input",(e=>{const n=this.shadow.querySelector(".add-task-form__add"),t=e.target;n.disabled=!t.value}))}}customElements.define("add-task-form",t)},377:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("projects")).find((n=>n.id===e)).tasks.find((e=>e.id===n));this.shadow.innerHTML=`\n            \n            <style>\n                .priority-buttons {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    column-gap: 4px;\n                }\n                \n                button {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    border: 2px solid transparent;\n                    background-color: transparent;\n                    cursor: pointer;\n                    padding: 10px;\n                    border-radius: 4px;\n                }\n                \n                svg {\n                    pointer-events: none;\n                }\n                \n                button.current {\n                    border: 2px solid #007dff;\n                }\n                \n                .priority-buttons:hover button.current {\n                    border: 2px solid transparent;\n                }\n                \n                button:hover {\n                    border: 2px solid #007dff !important;\n                }\n                \n            </style>\n        \n            <div class="priority-buttons">\n                <button class="priority-buttons__button ${"Приоритет 1"===t.priority?"current":""}" id="priority1">\n                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512" style="fill: #e32636;"><path d="M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z"/></svg>\n                </button>\n                <button class="priority-buttons__button ${"Приоритет 2"===t.priority?"current":""}" id="priority2">\n                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512" style="fill: #ff9900;"><path d="M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z"/></svg>\n                </button>\n                <button class="priority-buttons__button ${"Приоритет 3"===t.priority?"current":""}" id="priority3">\n                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512" style="fill: #007dff;"><path d="M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z"/></svg>\n                </button>\n                <button class="priority-buttons__button ${"Приоритет 4"===t.priority?"current":""}" id="priority4">\n                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512" style="fill: #a9a9a9;"><path d="M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z"/></svg>\n                </button>\n            </div>\n        `}changePriority(e){const n=e.target.id;let t="Приоритет 4";"priority1"===n?t="Приоритет 1":"priority2"===n?t="Приоритет 2":"priority3"===n&&(t="Приоритет 3");const o=parseInt(this.getAttribute("project-id")),i=parseInt(this.getAttribute("task-id")),s=JSON.parse(localStorage.getItem("projects")),r=s.find((e=>e.id===o)),d=s.indexOf(r),a=r.tasks,c=(a.find((e=>e.id===i)),document.querySelector("todo-content"));r.tasks=a.map((e=>e.id===i?{id:e.id,title:e.title,description:e.description,accomplished:e.accomplished,priority:t}:e)),s.splice(d,1,r),localStorage.setItem("projects",JSON.stringify(s)),c.taskRendering()}connectedCallback(){this.render(),this.shadow.querySelectorAll(".priority-buttons__button").forEach((e=>{e.addEventListener("click",this.changePriority.bind(this))}))}disconnectedCallback(){this.shadow.querySelectorAll(".priority-buttons__button").forEach((e=>{e.addEventListener("click",this.changePriority.bind(this))}))}}customElements.define("changing-priority",t)},411:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=parseInt(this.getAttribute("project-id")),n=JSON.parse(localStorage.getItem("projects")).find((n=>n.id===e)),t=JSON.parse(localStorage.getItem("settings")).theme,o=`\n    <style>\n      .popup {\n        background-color: rgba(0, 0, 0, .5);\n        position: fixed;\n        top: 0;\n        left: 0;\n        z-index: 19;\n        width: 100%;\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        overflow: hidden;\n      }\n      .popup__body {\n        background-color: ${"black"===t?"#282828":"#fff"};\n        border-radius: 10px;\n        display: flex;\n        flex-direction: column;\n        row-gap: 14px;\n        min-width: 500px;\n        max-height: 600px;\n        overflow-y: auto;\n        overflow-x: hidden;\n        -webkit-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n        -moz-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n        box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n        padding: 15px 0;\n      }\n      \n      .popup__content {\n        display: flex;\n        flex-direction: column;\n        row-gap: 20px;\n        padding: 0 20px;\n      }\n      \n      .popup__input {\n        display: flex;\n        flex-direction: column;\n        row-gap: 10px;\n      }\n      \n      .popup__input label {\n        font-weight: 700;\n        color: ${"black"===t?"#fff":"#000"};\n      }\n      \n      .popup__input input {\n        font-size: 18px;\n        border-radius: 4px;\n      }\n      \n      .popup__input input[type=text]:focus {\n        border: 2px solid rgba(0, 0, 0, 0.5);\n        outline: none;\n      }\n      \n      .popup__input input[type=color] {\n        background-color: ${"black"===t?"#282828":"#fff"};\n        border: 1px solid ${"black"===t?"#fff":"#000"};\n      }\n      \n      #name {\n        padding: 5px;\n        color: ${"black"===t?"#fff":"#000"};\n        border: 1px solid ${"black"===t?"#fff":"#000"};\n        background-color: ${"black"===t?"#282828":"#fff"};\n      }\n      \n      #color {\n        cursor: pointer;\n      }\n      \n      .popup__buttons {\n        display: flex;\n        justify-content: end;\n        align-items: center;\n        column-gap: 10px;\n        padding: 0 20px;\n      }\n      \n      hr {\n        width: 100%;\n        padding: 0;\n        margin: 0;\n        border-color: rgba(211, 211, 211, 0.4);\n      }\n      \n      .popup__title {\n        margin: 0;\n        padding: 0 20px;\n        color: ${"black"===t?"#fff":"#000"};\n      }\n      \n      .popup__cancel {\n        background-color: #2F4F4FFF;\n        border-radius: 4px;\n        border: none;\n        padding: 10px;\n        color: #fff;\n        font-weight: 700;\n        cursor: pointer;\n        -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n      }\n      \n      .popup__save-btn {\n        background-color: ${"blue"===t?"#2967e2":"#ff004d"};\n        border-radius: 4px;\n        border: none;\n        padding: 10px;\n        color: #fff;\n        font-weight: 700;\n        cursor: pointer;\n        -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n        box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n      }\n      .popup__save-btn:disabled {\n        background-color: ${"blue"===t?"rgba(41,103,226,0.7)":"rgba(255,0,77,0.7)"};\n        cursor: default;\n      }\n      \n      @media (max-width: 520px) {\n        .popup__body {\n            min-width: 290px;\n            max-width: 290px;\n        }\n        \n        .popup__input input {\n          font-size: 12px;\n        }\n      }\n    </style>\n    `;this.shadow.innerHTML=`\n    ${o}\n    <div class="popup"">\n      <div class="popup__body">\n        <h2 class="popup__title">Изменить</h2>\n        <hr>\n        <div class="popup__content">\n          <div class="popup__input">\n              <label for="name">Имя</label>\n              <input type="text" name="name" id="name" value="${n.title}" />\n          </div>\n          <div class="popup__input">\n            <label for="color">Цвет</label>\n            <input type="color" value="${n.color}" name="color" id="color" />\n          </div>\n        </div>\n        <hr>\n        <div class="popup__buttons">\n            <button class="popup__cancel">Отмена</button>\n            <button class="popup__save-btn">Сохранить</button>\n        </div>\n      </div>\n    </div>\n    `}closePopup(){document.querySelector("modify-project").remove()}saveModify(){const e=JSON.parse(localStorage.getItem("projects")),n=parseInt(this.getAttribute("project-id")),t=document.querySelector("project-side-menu"),o=this.shadow.querySelector("#name"),i=this.shadow.querySelector("#color"),s=document.querySelector("todo-content"),r=parseInt(s.getAttribute("project-id")),d=e.map(((e,t)=>e.id===n?{id:e.id,title:o.value,color:i.value,tasks:e.tasks}:e));localStorage.setItem("projects",JSON.stringify(d)),n===r&&(s.render(),s.taskRendering()),t.projectRenderer(),this.closePopup()}connectedCallback(){this.render(),this.shadow.querySelector(".popup__save-btn").addEventListener("click",this.saveModify.bind(this)),this.shadow.querySelector(".popup__cancel").addEventListener("click",this.closePopup),this.shadow.querySelector("#name").addEventListener("input",(e=>{const n=this.shadow.querySelector(".popup__save-btn"),t=e.target;n.disabled=!t.value}))}disconnectedCallback(){this.shadow.querySelector(".popup__save-btn").removeEventListener("click",this.saveModify),this.shadow.querySelector(".popup__cancel").removeEventListener("click",this.closePopup),this.shadow.querySelector("#name").removeEventListener("input",(e=>{const n=this.shadow.querySelector(".popup__save-btn"),t=e.target;n.disabled=!t.value}))}}customElements.define("modify-project",t)},757:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("projects")).find((n=>n.id===e)).tasks.find((e=>e.id===n)),o=JSON.parse(localStorage.getItem("settings")).theme,i=`\n            <style>\n                .popup {\n                    background-color: rgba(0, 0, 0, .5);\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    z-index: 19;\n                    width: 100%;\n                    height: 100vh;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    overflow: hidden;\n                  }\n                  .popup__body {\n                    background-color: ${"black"===o?"#202020":"#fff"};\n                    border-radius: 10px;\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 14px;\n                    min-width: 500px;\n                    max-height: 600px;\n                    max-width: 600px;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    -webkit-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    padding: 15px 0;\n                  }\n                  \n                  .popup__content {\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 20px;\n                    padding: 0 20px;\n                  }\n                  \n                  .popup__input {\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 10px;\n                  }\n                  \n                  .popup__input label {\n                    font-weight: 700;\n                    color: ${"black"===o?"#fff":"#000"};\n                  }\n                  \n                  .popup__input input {\n                    font-size: 18px;\n                    border-radius: 4px;\n                    outline: none;\n                  }\n                  \n                  .popup__input input:focus {\n                    border: 2px solid rgba(0, 0, 0, 0.5);\n                    outline: none;\n                  }\n                  \n                  #name {\n                    padding: 5px;\n                    color: ${"black"===o?"#fff":"#000"};\n                    border: 1px solid ${"black"===o?"#fff":"#000"};\n                    background-color: ${"black"===o?"#202020":"#fff"};\n                  }\n                  \n                  #description {\n                    padding: 5px;\n                  }\n                  \n                  .popup__textarea {\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 10px;\n                  }\n                  \n                  .popup__textarea textarea {\n                    font-size: 18px;\n                    border-radius: 4px;\n                    outline: none;\n                    resize: none;\n                    color: ${"black"===o?"#fff":"#000"};\n                    border: 1px solid ${"black"===o?"#fff":"#000"};\n                    background-color: ${"black"===o?"#202020":"#fff"};\n                  }\n                  \n                  .popup__input textarea:focus {\n                    border: 2px solid rgba(0, 0, 0, 0.5);\n                    outline: none;\n                  }\n                  \n                  .popup__textarea label {\n                    font-weight: 700;\n                    color: ${"black"===o?"#fff":"#000"};\n                  }\n                  \n                  .popup__priority {\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 10px;\n                  }\n                  \n                  .popup__priority select {\n                    align-self: start;\n                  }\n                  \n                  .popup__priority label {\n                    font-weight: 700;\n                    color: ${"black"===o?"#fff":"#000"};\n                  }\n                  \n                  .popup__buttons {\n                    display: flex;\n                    justify-content: end;\n                    align-items: center;\n                    column-gap: 10px;\n                    padding: 0 20px;\n                  }\n                  \n                  hr {\n                    width: 100%;\n                    padding: 0;\n                    margin: 0;\n                    border-color: rgba(211, 211, 211, 0.4);\n                  }\n                  \n                  .popup__title {\n                    margin: 0;\n                    padding: 0 20px;\n                    color: ${"black"===o?"#fff":"#000"};\n                  }\n                  \n                  .popup__cancel {\n                    background-color: #2F4F4FFF;\n                    border-radius: 4px;\n                    border: none;\n                    padding: 10px;\n                    color: #fff;\n                    font-weight: 700;\n                    cursor: pointer;\n                    -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                  }\n                  \n                  .popup__save-btn {\n                    background-color: ${"blue"===o?"#2967e2":"#ff004d"};\n                    border-radius: 4px;\n                    border: none;\n                    padding: 10px;\n                    color: #fff;\n                    font-weight: 700;\n                    cursor: pointer;\n                    -webkit-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 0 4px 0 rgba(34, 60, 80, 0.2);\n                  }\n                  .popup__save-btn:disabled {\n                    background-color: ${"blue"===o?"rgba(41,103,226,0.7)":"rgba(255,0,77,0.7)"};\n                    cursor: default;\n                  }\n                  \n                  @media (max-width: 520px) {\n                    .popup__body {\n                        min-width: 290px;\n                        max-width: 290px;\n                    }\n                    \n                    .popup__input input {\n                      font-size: 12px;\n                    }\n                  }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${i}\n            <div class="popup">\n              <div class="popup__body">\n                <h2 class="popup__title">Изменить</h2>\n                <hr>\n                <div class="popup__content">\n                  <div class="popup__input">\n                      <label for="name">Название задачи</label>\n                      <input type="text" name="name" id="name" value="${t.title}" />\n                  </div>\n                  <div class="popup__textarea">\n                      <label for="description">Описание задачи</label>\n                      <textarea name="description" id="description" rows="6">${""===t.description?"":t.description}</textarea>\n                  </div>\n                  <div class="popup__priority">\n                      <label for="priority">Приоритет задачи</label>\n                      <select name="priority" id="priority">\n                        <option value="Приоритет 1" ${"Приоритет 1"===t.priority?"selected":""}>Приоритет 1</option>\n                        <option value="Приоритет 2" ${"Приоритет 2"===t.priority?"selected":""}>Приоритет 2</option>\n                        <option value="Приоритет 3" ${"Приоритет 3"===t.priority?"selected":""}>Приоритет 3</option>\n                        <option value="Приоритет 4" ${"Приоритет 4"===t.priority?"selected":""}>Приоритет 4</option>\n                      </select>\n                  </div>\n                </div>\n                <hr>\n                <div class="popup__buttons">\n                    <button class="popup__cancel">Отмена</button>\n                    <button class="popup__save-btn">Сохранить</button>\n                </div>\n              </div>\n            </div>\n        `}closePopup(){document.querySelector("modify-task").remove()}modifyTask(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("projects")),o=t.find((n=>n.id===e)),i=o.tasks,s=t.indexOf(o),r=this.shadow.querySelector("#name"),d=this.shadow.querySelector("#description"),a=this.shadow.querySelector("#priority").value,c=document.querySelector("todo-content");o.tasks=i.map((e=>e.id===n?{id:e.id,title:r.value,description:d.value,accomplished:e.accomplished,priority:a}:e)),t.splice(s,1,o),localStorage.setItem("projects",JSON.stringify(t)),c.taskRendering(),this.closePopup()}connectedCallback(){this.render(),this.shadow.querySelector(".popup__cancel").addEventListener("click",this.closePopup),this.shadow.querySelector(".popup__save-btn").addEventListener("click",this.modifyTask.bind(this)),this.shadow.querySelector("#name").addEventListener("input",(e=>{const n=this.shadow.querySelector(".popup__save-btn"),t=e.target;n.disabled=!t.value}))}disconnectedCallback(){this.shadow.querySelector(".popup__cancel").addEventListener("click",this.closePopup),this.shadow.querySelector(".popup__save-btn").addEventListener("click",this.modifyTask.bind(this)),this.shadow.querySelector("#name").removeEventListener("input",(e=>{const n=this.shadow.querySelector(".popup__save-btn"),t=e.target;n.disabled=!t.value}))}}customElements.define("modify-task",t)},668:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")).theme,n=`\n            <style>\n                .container {\n                    position: relative;\n                }\n            \n                .context-menu-button {\n                    border: none;\n                    background-color: transparent;\n                    padding: 10px 15px;\n                    cursor: pointer;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                }\n                \n                .context-menu-button svg {\n                    fill: ${"black"===e?"#fff":"#000"};\n                }\n                \n                .context-menu-button:hover {\n                    background-color: ${"black"===e?"rgba(0,0,0,0.3)":"rgba(255,255,255,0.4)"};\n                }\n                \n                .context-menu {\n                    display: none;\n                    position: absolute;\n                    left: -100%;\n                    background-color: ${"black"===e?"#282828":"#fff"};\n                    -webkit-box-shadow: 0 0 10px 0px rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 0 10px 0px rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 0 10px 0px rgba(34, 60, 80, 0.2);\n                    padding: 6px 8px;\n                    border-radius: 5px;\n                    border: 1px solid rgba(255, 255, 255, 0.1);\n                    z-index: 10;\n                }\n                \n                @media (max-width: 480px)\n                {\n                    .context-menu {\n                        left: -245%;\n                    }\n                }\n                \n                .context-menu.open {\n                    display: block;\n                }\n                \n                .context-menu__item {\n                    width: 100%;\n                    text-align: left;\n                    padding: 9px 5px;\n                    background-color: transparent;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    font-weight: 700;\n                    color: ${"black"===e?"#fff":"#000"};\n                }\n                \n                .context-menu__item:hover {\n                    background-color: ${"black"===e?"rgba(255,255,255,0.2)":"rgba(47,79,79,0.25)"};\n                }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${n}\n            <div class="container">\n                <button class="context-menu-button">\n                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 128 512"><style>svg{fill:#000000}</style><path d="M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z"/></svg>\n                </button>\n                <div class="context-menu">\n                    <div class="context-menu__body">\n                        <button class="context-menu__item" id="modify">Изменить</button>\n                        <button class="context-menu__item" id="duplicate">Дублировать</button>\n                        <button class="context-menu__item" id="delete">Удалить</button>\n                    </div>\n                </div>\n            </div>\n        `}openCloseMenu(){const e=this.shadow.querySelector(".context-menu"),n=document.querySelector("project-side-menu").shadow.querySelector(".project-side-menu__body"),t=Math.max(n.scrollHeight,n.scrollHeight,n.offsetHeight,n.offsetHeight,n.clientHeight,n.clientHeight);e.classList.toggle("open"),Math.max(n.scrollHeight,n.scrollHeight,n.offsetHeight,n.offsetHeight,n.clientHeight,n.clientHeight)>t?(e.style.top="-113px",e.style.bottom=""):(e.style.top="",e.style.bottom="-113px")}modify(){const e=document.createElement("modify-project"),n=this.getAttribute("project-id");e.setAttribute("project-id",n),document.body.append(e),this.openCloseMenu()}duplicate(){const e=document.querySelector("project-side-menu"),n=JSON.parse(localStorage.getItem("projects")),t=parseInt(this.getAttribute("project-id")),o=n.find((e=>e.id===t)),i=n.indexOf(o),s={id:(new Date).getTime(),title:`Копия ${o.title}`,color:o.color,tasks:o.tasks};n.splice(i+1,0,s),localStorage.setItem("projects",JSON.stringify(n)),e.projectRenderer(),this.openCloseMenu()}delete(){const e=document.querySelector("project-side-menu"),n=JSON.parse(localStorage.getItem("projects")),t=parseInt(this.getAttribute("project-id")),o=n.find((e=>e.id===t)),i=n.indexOf(o),s=document.querySelector("todo-content"),r=parseInt(s.getAttribute("project-id"));n.splice(i,1),localStorage.setItem("projects",JSON.stringify(n)),o.id===r&&(s.setAttribute("project-id","0"),s.render(),s.taskRendering()),e.projectRenderer(),this.openCloseMenu()}connectedCallback(){this.render(),this.shadow.querySelector("button.context-menu-button").addEventListener("click",this.openCloseMenu.bind(this)),this.shadow.querySelector("button#modify").addEventListener("click",this.modify.bind(this)),this.shadow.querySelector("button#duplicate").addEventListener("click",this.duplicate.bind(this)),this.shadow.querySelector("button#delete").addEventListener("click",this.delete.bind(this))}disconnectedCallback(){this.shadow.querySelector(".context-menu-button").removeEventListener("click",this.openCloseMenu),this.shadow.querySelector("button#modify").removeEventListener("click",this.modify),this.shadow.querySelector("button#duplicate").removeEventListener("click",this.duplicate.bind(this)),this.shadow.querySelector("button#delete").removeEventListener("click",this.delete.bind(this))}}customElements.define("project-activities",t)},211:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=parseInt(this.getAttribute("project-id")),n=JSON.parse(localStorage.getItem("projects")).find((n=>n.id===e)),t=JSON.parse(localStorage.getItem("settings")).theme,o=`\n            <style>\n                .project-side-menu__item {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    width: 100%;\n                    border-radius: 6px;\n               }\n               \n               .project-side-menu__item button {\n                    width: 100%;\n                    text-align: left;\n                    padding: 9px 5px;\n                    background-color: transparent;\n                    border: none;\n                    cursor: pointer;\n                    font-weight: 700;\n                    color: ${"black"===t?"#fff":"#000"};\n               }\n               \n               .project-side-menu__item button span {\n                    pointer-events: none;\n               }\n                \n               .project-side-menu__item:hover {\n                    background-color: ${"black"===t?"rgba(255,255,255,0.2)":"rgba(47,79,79,0.25)"};\n               }\n               \n               .project-side-menu__item-btn {\n                    display: flex;\n                    align-items: center;\n               }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${o}\n            <div class="project-side-menu__item">\n              <button project-id="${n.id}" class="project-side-menu__item-btn">\n                <span style="background-color: ${n.color}; border-radius: 50%; width: 10px; height: 10px; display: block;"></span>\n                <span style="padding: 0 0 0 10px; display: block;">${n.title}</span>\n              </button>\n              <project-activities project-id="${n.id}"></project-activities>\n            </div>\n        `}openProject(e){const n=e.target.getAttribute("project-id"),t=document.querySelector("todo-content");t.setAttribute("project-id",n),t.render(),t.taskRendering()}connectedCallback(){this.render(),this.shadow.querySelector("button.project-side-menu__item-btn").addEventListener("click",this.openProject)}disconnectedCallback(){this.shadow.querySelector("button.project-side-menu__item-btn").addEventListener("click",this.openProject)}}customElements.define("project-item",t)},43:function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.ProjectMenu=void 0;class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")),n=(null==e?void 0:e.theme)||"white",t=`\n      <style>\n      .project-side-menu {\n        position: fixed;\n        left: 0;\n        top: 48px;\n        max-width: 280px;\n        width: 100%;\n        padding: 20px 15px;\n        height: calc(100vh - 48px);\n        background-color: ${"black"===n?"#282828":"#fafafa"};\n        transform: translateX(-100%);\n        transition: transform 0.3s ease 0s;\n      }\n      \n      @media (max-width: 480px) {\n        .project-side-menu {\n            max-width: calc(100% - 30px);\n        }\n      }\n      \n      .project-side-menu.open {\n        transform: translateX(0);\n      }\n      \n      .project-side-menu__title {\n        color: ${"black"===n?"hsla(0,0%,100%,0.56)":"#000"};\n        font-weight: 700;\n        cursor: default;\n      }\n      \n       .project-side-menu__add {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 5px;\n          border-radius: 6px;\n       }\n       \n       .project-side-menu__add:hover {\n            background-color: ${"black"===n?"rgba(255,255,255,0.2)":"rgba(47,79,79,0.25)"};\n       }\n       \n       .project-side-menu__body {\n            height: 100%;\n       }\n       \n       .project-side-menu__container {\n            color: ${"black"===n?"#fff":"#000"};\n       }\n      </style>\n    `;this.shadow.innerHTML=`\n${t}\n<div class="project-side-menu open">\n  <div class="project-side-menu__body">\n    <div class="project-side-menu__add">\n      <span class="project-side-menu__title">Проекты</span>\n      <add-project></add-project>\n    </div>\n    <div class="project-side-menu__container project-container">\n      \n    </div>\n  </div>   \n</div>\n`}projectRenderer(){const e=JSON.parse(localStorage.getItem("projects")),n=e&&e.length?e.map((e=>this.projectTemplate(e))).join(""):"Проектов нет.";this.shadow.querySelector(".project-container").innerHTML=n}projectTemplate(e){return`\n        <project-item project-id="${e.id}"></project-item>\n    `}connectedCallback(){this.render(),this.projectRenderer(),window.innerWidth<900&&this.setAttribute("open","false")}static get observedAttributes(){return["open"]}attributeChangedCallback(e,n,t){if("open"===e){const e=this.shadow.querySelector(".project-side-menu");"true"===t?e.classList.add("open"):"false"===t&&e.classList.remove("open")}}}n.ProjectMenu=t,customElements.define("project-side-menu",t)},770:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id"));let t=JSON.parse(localStorage.getItem("projects")).find((n=>n.id===e));const o=t.tasks.find((e=>e.id===n)),i=JSON.parse(localStorage.getItem("settings")).theme,s=`\n            <style>\n                p {\n                    padding: 0;\n                    margin: 0;\n                }\n                \n                h2 {\n                    margin: 0;\n                    padding: 0;\n                }\n            \n                .popup {\n                    background-color: rgba(0, 0, 0, .5);\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 100vh;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    overflow-x: hidden;\n                    overflow-y: auto;\n                    z-index: 19;\n                  }\n                  .popup__body {\n                    background-color: ${"black"===i?"#202020":"#fff"};\n                    border-radius: 10px;\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 14px;\n                    min-width: 500px;\n                    min-height: 80px;\n                    max-height: 450px;\n                    max-width: 600px;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    -webkit-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    padding: 15px 0;\n                  }\n                  \n                  .popup__head {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding: 0 20px;\n                  }\n                  \n                  .popup__title {\n                    display: flex;\n                    align-items: center;\n                    color: ${"black"===i?"#fff":"#000"};\n                  }\n                  \n                  .popup__description {\n                    word-wrap: break-word;\n                    color: ${"black"===i?"#fff":"#000"};\n                  }\n                  \n                  .popup__name {\n                    word-wrap: break-word;\n                    color: ${"black"===i?"#fff":"#000"};\n                  }\n                  \n                  .popup__content {\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 15px;\n                    padding: 0 20px;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                  }\n                  \n                  @media (max-width: 520px) {\n                    .popup__body {\n                        min-width: 290px;\n                        max-width: 290px;\n                    }\n                  }\n                  \n                  .popup__button-close {\n                    background-color: transparent;\n                      cursor: pointer;\n                      display: flex;\n                      align-items: center;\n                      justify-content: center;\n                      outline: none;\n                      border: none;\n                      padding: 6px;\n                      border-radius: 4px;\n                      transition: .05s ease 0s;\n                      z-index: 19;\n                  }\n                  \n                  .popup__button-close svg {\n                    fill: ${"black"===i?"#fff":"#000"};\n                  }\n                  \n                  .popup__button-close:hover {\n                    background-color: ${"black"===i?"rgba(255, 255, 255, 0.15)":"rgba(0, 0, 0, 0.15)"};\n                  }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${s}\n            <div class="popup">\n              <div class="popup__body">\n                <div class="popup__head">\n                    <p class="popup__title">\n                        <span class="popup__title-color" style="background-color: ${t.color}; border-radius: 50%; width: 10px; height: 10px; display: block;"></span>\n                        <span class="popup__title-text" style="padding: 0 0 0 10px; display: block;">${t.title}</span>\n                    </p>\n                    <button class="popup__button-close">\n                        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 384 512"><style>svg{fill:#000000}</style><path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/></svg>\n                    </button>\n                </div>\n                <div class="popup__content">\n                  <h2 class="popup__name">${o.title}</h2>\n                  ${""===o.description?"":`<p class="popup__description">${o.description}</p>`}\n                </div>\n              </div>\n            </div>\n        `}closePopup(){document.querySelector("task-view").remove()}connectedCallback(){this.render(),this.shadow.querySelector(".popup__button-close").addEventListener("click",this.closePopup)}disconnectedCallback(){this.shadow.querySelector(".popup__button-close").removeEventListener("click",this.closePopup)}}customElements.define("task-view",t)},959:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){let e,n;const t=this.getAttribute("theme-name"),o=JSON.parse(localStorage.getItem("settings")),i=(null==o?void 0:o.theme)||"white";let s=i===t;"black"===t?(e="#444444",n="Чёрная тема"):"blue"===t?(e="#2967e2",n="Голубая тема"):"red"===t?(e="#FF0046",n="Красная тема"):"white"===t&&(e="#fff",n="Белая тема");const r=`\n            <style>\n                button {\n                    display: flex;\n                    align-items: center;\n                    column-gap: 8px;\n                    width: 100%;\n                    background-color: ${e};\n                    border-radius: 10px;\n                    padding: 20px;\n                    font-weight: 700;\n                    border: ${"black"===i?"none":"1px solid #DEDEDE"};\n                    cursor: pointer;\n                    color: ${"#fff"===e?"#000":"#fff"};\n                    -webkit-box-shadow: 2px 2px 15px -8px rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 2px 2px 15px -8px rgba(34, 60, 80, 0.2);\n                    box-shadow: 2px 2px 15px -8px rgba(34, 60, 80, 0.2);\n                }\n                \n                button span {\n                    display: block;\n                }\n                \n                button input[type=radio] {\n                    pointer-events: none;\n                    margin: 0;\n                }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${r}\n            <button>\n                <input type="radio" ${s?"checked":""}>\n                <span>${n}</span>\n            </button>\n        `}white(){document.body.classList.value="white";const e=JSON.parse(localStorage.getItem("settings"));e.theme="white",localStorage.setItem("settings",JSON.stringify(e))}black(){document.body.classList.value="black";const e=JSON.parse(localStorage.getItem("settings"));e.theme="black",localStorage.setItem("settings",JSON.stringify(e))}blue(){document.body.classList.value="blue";const e=JSON.parse(localStorage.getItem("settings"));e.theme="blue",localStorage.setItem("settings",JSON.stringify(e))}red(){document.body.classList.value="red";const e=JSON.parse(localStorage.getItem("settings"));e.theme="red",localStorage.setItem("settings",JSON.stringify(e))}connectedCallback(){this.render();const e=this.getAttribute("theme-name");this.addEventListener("click",(()=>{"white"===e?this.white():"black"===e?this.black():"blue"===e?this.blue():"red"===e&&this.red()}))}disconnectedCallback(){const e=this.getAttribute("theme-name");this.removeEventListener("click",(()=>{"white"===e?this.white():"black"===e?this.black():"blue"===e?this.blue():"red"===e&&this.red()}))}}customElements.define("theme-item",t)},355:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")).theme,n=`\n            <style>\n                h2 {\n                    margin: 0;\n                    padding: 0;\n                }\n            \n                .popup {\n                    background-color: rgba(0, 0, 0, .5);\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 100vh;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    overflow-x: hidden;\n                    overflow-y: auto;\n                    z-index: 19;\n                  }\n                  .popup__body {\n                    background-color: ${"black"===e?"#282828":"#fff"};\n                    border-radius: 10px;\n                    display: flex;\n                    flex-direction: column;\n                    row-gap: 14px;\n                    max-width: 700px;\n                    min-height: 450px;\n                    max-height: 600px;\n                    width: 100%;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    -webkit-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    -moz-box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    box-shadow: 0 5px 10px 2px rgba(34, 60, 80, 0.2);\n                    padding: 0 0 15px 0;\n                  }\n                  \n                  .popup__head {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding: 15px 20px;\n                    -webkit-box-shadow: 0 3px 5px -5px rgba(34, 60, 80, 0.6);\n                    -moz-box-shadow: 0 3px 5px -5px rgba(34, 60, 80, 0.6);\n                    box-shadow: 0 3px 5px -5px rgba(34, 60, 80, 0.6);\n                  }\n                  \n                  .popup__title {\n                    display: flex;\n                    align-items: center;\n                    color: ${"black"===e?"#fff":"#000"};\n                  }\n                  \n                  .popup__content {\n                    display: flex;\n                    flex-wrap: wrap;\n                    gap: 15px;\n                    padding: 0 20px;\n                    overflow: hidden;\n                  }\n                  \n                  theme-item {\n                    flex: 0 0 calc(50% - 15px);\n                  }\n                  \n                  @media (max-width: 740px) {\n                    .popup__body {\n                        min-width: 480px;\n                        max-width: 480px;\n                    }\n                  }\n                  \n                  @media (max-width: 520px) {\n                    .popup__body {\n                        min-width: 290px;\n                        max-width: 290px;\n                    }\n                    \n                    theme-item {\n                      flex: 0 0 100%;\n                    }\n                  }\n                  \n                  .popup__button-close {\n                    background-color: transparent;\n                      cursor: pointer;\n                      display: flex;\n                      align-items: center;\n                      justify-content: center;\n                      outline: none;\n                      border: none;\n                      padding: 8px;\n                      border-radius: 4px;\n                      transition: .05s ease 0s;\n                      z-index: 19;\n                  }\n                  \n                  .popup__button-close svg {\n                    fill: ${"black"===e?"#fff":"#000"};\n                  }\n                  \n                  .popup__button-close:hover {\n                    background-color: ${"black"===e?"rgba(255, 255, 255, 0.15)":"rgba(0, 0, 0, 0.15)"};\n                  }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${n}\n            <div class="popup">\n              <div class="popup__body">\n                <div class="popup__head">\n                    <h2 class="popup__title">Настройки темы</h2>\n                    <button class="popup__button-close">\n                        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 384 512"><style>svg{fill:#000000}</style><path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/></svg>\n                    </button>\n                </div>\n                <div class="popup__content">\n                    <theme-item theme-name="black"></theme-item>\n                    <theme-item theme-name="white"></theme-item>\n                    <theme-item theme-name="blue"></theme-item>\n                    <theme-item theme-name="red"></theme-item>\n                </div>\n              </div>\n            </div>\n        `}closePopup(){document.querySelector("theme-settings").remove()}connectedCallback(){this.render(),this.shadow.querySelector(".popup__button-close").addEventListener("click",this.closePopup),this.shadow.querySelectorAll("theme-item").forEach((e=>{e.addEventListener("click",(()=>{const e=document.querySelector("theme-settings"),n=document.createElement("theme-settings"),t=document.querySelector("project-side-menu"),o=document.querySelector("todo-content");t.render(),t.projectRenderer(),o.render(),o.taskRendering(),e.remove(),document.body.append(n)}))}))}disconnectedCallback(){this.shadow.querySelector(".popup__button-close").removeEventListener("click",this.closePopup),this.shadow.querySelectorAll("theme-item").forEach((e=>{e.addEventListener("click",(()=>{const e=document.querySelector("theme-settings"),n=document.createElement("theme-settings"),t=document.querySelector("project-side-menu"),o=document.querySelector("todo-content");t.render(),t.projectRenderer(),o.render(),o.taskRendering(),e.remove(),document.body.append(n)}))}))}}customElements.define("theme-settings",t)},549:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=JSON.parse(localStorage.getItem("settings")),n=(null==e?void 0:e.theme)||"white",t=parseInt(this.getAttribute("project-id"));let o,i;t&&(o=JSON.parse(localStorage.getItem("projects")),i=o.find((e=>e.id===t)));const s=`\n            <style>\n                .todo-content__container {\n                    max-width: 800px;\n                    height: 100%;\n                    margin: 0 auto;\n                    padding: 0 15px 15px 15px;\n                }\n                \n                @media (max-width: 1200px) {\n                    .todo-content__container {\n                        max-width: 700px;\n                    }\n                }\n                \n                @media (max-width: 1000px) {\n                    .todo-content__container {\n                        max-width: 600px;\n                    }\n                }\n                \n                @media (max-width: 620px) {\n                    .todo-content__container {\n                        max-width: 480px;\n                    }\n                }\n                \n                @media (max-width: 490px) {\n                    .todo-content__container {\n                        max-width: 320px;\n                    }\n                }\n                \n                .todo-content__head {\n                    position: sticky;\n                    top: 48px;\n                    left: 0;\n                    background-color: ${"black"===n?"#202020":"#fff"};\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                    padding: 20px 0;\n                    z-index: 10;\n                }\n                \n                .todo-content__title {\n                    padding: 0;\n                    margin: 0;\n                    color: ${"black"===n?"#fff":"#000"};\n                }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${s}\n            <div class="todo-content">\n                <div class="todo-content__container">\n                    ${t?`\n                        <div class="todo-content__head">\n                        <h2 class="todo-content__title">${i.title}</h2>\n                        <project-activities project-id="${t}"></project-activities>\n                        </div>\n                        <div class="todo-content__body">\n                            <div class="todo-content__body-content"></div>\n                            <div class="todo-content__body-button-container">\n                                <add-task-button></add-task-button>\n                            </div>\n                        </div>\n                    `:""}\n                </div>\n            </div>\n        `}taskRendering(){const e=this.shadow.querySelector(".todo-content__body-content"),n=parseInt(this.getAttribute("project-id"));let t,o,i=JSON.parse(localStorage.getItem("projects"));n>0&&(t=i.find((e=>e.id===n)),o=t.tasks,e.innerHTML=o.map((e=>this.renderTaskTemplate(e))).join(""))}renderTaskTemplate(e){return`\n            <todo-item project-id="${this.getAttribute("project-id")}" task-id="${e.id}"></todo-item>\n        `}renderAddTaskForm(){const e=this.shadow.querySelector(".todo-content__body-button-container"),n=this.getAttribute("project-id");e.innerHTML=`<add-task-form project-id="${n}"></add-task-form>`}renderAddTaskButton(){this.shadow.querySelector(".todo-content__body-button-container").innerHTML="<add-task-button></add-task-button>"}connectedCallback(){this.render(),this.taskRendering()}}customElements.define("todo-content",t)},393:function(e,n){Object.defineProperty(n,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("projects")).find((n=>n.id===e)).tasks.find((e=>e.id===n));let o="#a9a9a9";const i=JSON.parse(localStorage.getItem("settings")).theme;"Приоритет 1"===t.priority?o="#e32636":"Приоритет 2"===t.priority?o="#ff9900":"Приоритет 3"===t.priority&&(o="#007dff");const s=`\n            <style>\n                p {\n                    padding: 0;\n                    margin: 0;\n                }\n                \n                .todo-item__content {\n                    display: flex;\n                    flex-direction: column;\n                    width: 100%;\n                    cursor: pointer;\n                }\n                \n                .todo-item__content:not(.todo-item__description) .todo-item__title {\n                    font-size: 18px;\n                }\n                \n                .todo-item__description {\n                    font-size: 14px;\n                }\n                \n                .todo-item__title,\n                .todo-item__description {\n                    overflow: hidden;\n                    max-width: 740px;\n                    text-overflow: ellipsis;\n                    color: ${"black"===i?"#fff":"#000"};\n                }\n                \n                @media (max-width: 1200px) {\n                    .todo-item__title,\n                    .todo-item__description {\n                        max-width: 640px;\n                    }\n                }\n                \n                @media (max-width: 1000px) {\n                    .todo-item__title,\n                    .todo-item__description {\n                        max-width: 540px;\n                    }\n                }\n                \n                @media (max-width: 620px) {\n                    .todo-item__title,\n                    .todo-item__description {\n                        max-width: 420px;\n                    }\n                }\n                \n                @media (max-width: 490px) {\n                    .todo-item__title,\n                    .todo-item__description {\n                        max-width: 260px;\n                    }\n                }\n                \n                .todo-item__title {\n                    font-size: 16px;\n                }\n                \n                .todo-item__title:not(:last-child) {\n                    padding-bottom: 6px;\n                }\n            \n                .todo-item__container {\n                    display: flex;\n                    padding-bottom: 10px;\n                    padding-top: 8px;\n                    border-bottom: 1px solid rgba(169,169,169,0.5);\n                }\n                \n                .todo-item__checkbox-conatiner {\n                    margin-right: 6px;\n                }\n                \n                .todo-item__checkbox {\n                    position: relative;\n                    width: 18px;\n                    height: 18px;\n                    border-radius: 4px;\n                    border: 2px solid ${o};\n                    cursor: pointer;\n                    background-color: ${"black"===i?"#202020":"#fff"};\n                }\n                \n                .todo-item__checkbox.checked:before {\n                    display: flex;\n                    -webkit-box-align: center;\n                    -ms-flex-align: center;\n                    align-items: center;\n                    -webkit-box-pack: center;\n                    -ms-flex-pack: center;\n                    justify-content: center;\n                    font-size: 16px;\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    content: '✓︎';\n                    color: #fff;\n                    font-weight: 700;\n                    width: 18px;\n                    height: 18px;\n                    border-radius: 2px;\n                    background-color: ${o};\n                    z-index: 8;\n                    pointer-events: none;\n                }\n                \n                .todo-item__container:has(.todo-item__checkbox.checked) .todo-item__content .todo-item__title,\n                .todo-item__container:has(.todo-item__checkbox.checked) .todo-item__content .todo-item__description {\n                  text-decoration: line-through;\n                }\n            </style>\n        `;this.shadow.innerHTML=`\n            ${s}\n            <div class="todo-item">\n                <div class="todo-item__container">\n                    <div class="todo-item__checkbox-conatiner">\n                        <div class="todo-item__checkbox ${t.accomplished?"checked":""}"></div>\n                    </div>\n                    <div class="todo-item__content">\n                        <p class="todo-item__title">${t.title.trim()}</p>\n                        ${""===t.description.trim()?"":`<p class="todo-item__description">${t.description.trim()}</p>`}\n                    </div>\n                    <actions-task project-id="${e}" task-id="${n}"></actions-task>\n                </div>\n            </div>\n        `}openTaskView(){const e=document.createElement("task-view"),n=this.getAttribute("project-id"),t=this.getAttribute("task-id");e.setAttribute("project-id",n),e.setAttribute("task-id",t),document.body.append(e)}setAccomplished(){const e=parseInt(this.getAttribute("project-id")),n=parseInt(this.getAttribute("task-id")),t=JSON.parse(localStorage.getItem("projects")),o=t.find((n=>n.id===e)),i=o.tasks,s=i.find((e=>e.id===n)),r=i.indexOf(s),d=t.indexOf(o);s.accomplished=!s.accomplished,i.splice(r,1,s),o.tasks=i,t.splice(d,1,o),localStorage.setItem("projects",JSON.stringify(t))}connectedCallback(){this.render(),this.shadow.querySelector(".todo-item__content").addEventListener("click",this.openTaskView.bind(this)),this.shadow.querySelector(".todo-item__checkbox").addEventListener("click",this.setAccomplished.bind(this));const e=this.shadow.querySelector(".todo-item__checkbox");e.addEventListener("click",(()=>e.classList.toggle("checked")))}disconnectedCallback(){this.shadow.querySelector(".todo-item__content").removeEventListener("click",this.openTaskView),this.shadow.querySelector(".todo-item__checkbox").removeEventListener("click",this.setAccomplished);const e=this.shadow.querySelector(".todo-item__checkbox");e.addEventListener("click",(()=>e.classList.toggle("checked")))}}customElements.define("todo-item",t)},740:function(e,n,t){Object.defineProperty(n,"__esModule",{value:!0}),t(43),t(679),t(52),t(668),t(411),t(549),t(337),t(682),t(393),t(770),t(211),t(784),t(757),t(377),t(355),t(959)},866:function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),document.querySelector(".header__button-menu").addEventListener("click",(()=>{const e=document.querySelector("project-side-menu"),n=e.getAttribute("open");"true"===n?e.setAttribute("open","false"):"false"===n||window.innerWidth<900&&null===n?e.setAttribute("open","true"):null===n&&e.setAttribute("open","false")})),document.querySelector(".header__button-settings").addEventListener("click",(()=>{const e=document.createElement("theme-settings");document.body.append(e)}));const t=JSON.parse(localStorage.getItem("settings"))||{},o=(null==t?void 0:t.theme)||"white";t.theme=o,document.body.classList.value=o,localStorage.setItem("settings",JSON.stringify(t))},830:function(e,n,t){e.exports=t.p+"b02e4bb6c7bc6cfea67c.svg"}},n={};function t(o){var i=n[o];if(void 0!==i)return i.exports;var s=n[o]={exports:{}};return e[o](s,s.exports,t),s.exports}t.m=e,t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,{a:n}),n},t.d=function(e,n){for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&!e;)e=o[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e+"../"}(),t.b=document.baseURI||self.location.href,t(740),t(866),t(490),t(945)}();